---
- name: Generate a mac address
  ansible.builtin.set_fact:
    mac: "{{ '52:54:00' | community.general.random_mac }}"

- name: Create and start the machine
  become: true
  block:

    - name: Copy template image
      copy:
        src: "{{ item.template }}"
        dest: "{{ item.disk }}"
        remote_src: true
      register: template_copy

    - name: Define the virtual machine
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'template.xml.j2') }}"
      register: vm_result

    - name: Start the virtual machine
      community.libvirt.virt:
        name: "{{ item.name }}"
        state: running
        command: start
      when: vm_result.changed

    - name: Wait for the VM's IP address using virsh domifaddr
      shell: "virsh domifaddr {{ item.name }} --source agent | awk '!/lo/ && /ipv4/ {print $4}' | cut -d/ -f1"
      register: vm_ip
      retries: 20
      delay: 5
      until: vm_ip.stdout != ""

- name: Update inventory
  block:

    - name: Add vm to molecule_inventory
      vars:
        inventory_partial_yaml: |
          all:
            children:
              molecule:
                hosts:
                  "{{ item.name }}":
                    ansible_host: "{{ vm_ip.stdout }}"

      ansible.builtin.set_fact:
        molecule_inventory: >
          {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}

    - name: Dump molecule_inventory
      ansible.builtin.copy:
        content: "{{ molecule_inventory | to_yaml }}"
        dest: "{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        mode: "0600"

    - name: Force inventory refresh
      ansible.builtin.meta: refresh_inventory

...
